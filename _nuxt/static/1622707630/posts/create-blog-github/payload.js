__NUXT_JSONP__("/posts/create-blog-github", {data:[{posts:{attributes:{title:"如何使用nuxtJs在github.io搭建自己博客",des:"让你DIY专属于自己的博客",createTime:"2021-6-2"},html:"\u003Ch1\u003E如何使用\u003Ccode\u003EnuxtJs\u003C\u002Fcode\u003E在\u003Ccode\u003Egithub.io\u003C\u002Fcode\u003E搭建自己博客\u003C\u002Fh1\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E可以使用\u003Ccode\u003EnuxtJS``DIY\u003C\u002Fcode\u003E一个专属自己的博客，利用 \u003Ccode\u003Emarkdown\u003C\u002Fcode\u003E 来记录博客\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2\u003E概述\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E设置 \u003Ccode\u003Egithub\u003C\u002Fcode\u003E 上的个人主页\u003C\u002Fli\u003E\n\u003Cli\u003E在本地构建项目\u003C\u002Fli\u003E\n\u003Cli\u003E部署踩坑\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cblockquote\u003E\n\u003Ch3\u003E设置 \u003Ccode\u003Egithub\u003C\u002Fcode\u003E 上的个人主页\u003C\u002Fh3\u003E\n\u003C\u002Fblockquote\u003E\n\u003Col\u003E\n\u003Cli\u003E\n\u003Cp\u003E新建一个项目\n登录以后，点击主页的 \u003Ccode\u003ENew\u003C\u002Fcode\u003E 按钮\n\u003Cimg src=\"..\u002Fmd\u002Fcreate-blog-github\u002Fstep_1.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E设置未来 \u003Ccode\u003Egithub.io\u003C\u002Fcode\u003E 主页的链接\n\u003Cimg src=\"..\u002Fmd\u002Fcreate-blog-github\u002Fstep_2.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E注意：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003ERepository name\u003C\u002Fcode\u003E 请填写前面的 \u003Ccode\u003EOwner\u003C\u002Fcode\u003E 名字 + \u003Ccode\u003E.github.io\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E如图示，\u003Ccode\u003ERepository name\u003C\u002Fcode\u003E 就应该写 \u003Ccode\u003Elimingcan562.github.io\u003C\u002Fcode\u003E 这样后面可以直接用 \u003Ccode\u003Elimingcan562.github.io\u003C\u002Fcode\u003E 打开你的个人主页\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E完成以后回到主页你会发现仓库多了一个叫 \u003Ccode\u003Elimingcan562.github.io\u003C\u002Fcode\u003E 的仓库（请取你自己的名字），进入以后点击 \u003Ccode\u003ESettings\u003C\u002Fcode\u003E\n\u003Cimg src=\"..\u002Fmd\u002Fcreate-blog-github\u002Fstep_3.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E修改个人主页映射对应的仓库分支\n\u003Cimg src=\"..\u002Fmd\u002Fcreate-blog-github\u002Fstep_4.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E注意：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E我是将打包好的文件推送到仓库的\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E分支，所以需要把个人主页映射到\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E分支，这样当你打开个人主页是，其实看到的是编译好的\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E分支内容\u003C\u002Fli\u003E\n\u003Cli\u003E推送 \u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E 也是个坑，后续会讲\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EOK，目前我们\u003Ccode\u003Egithub\u003C\u002Fcode\u003E部分就完成了\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cblockquote\u003E\n\u003Ch3\u003E在本地构建项目\u003C\u002Fh3\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E这个就不过多的赘述了，因为我的博客是用\u003Ccode\u003EnuxtJs\u003C\u002Fcode\u003E做的，所以直接上官网看看文档，直接搞个\u003Ccode\u003Edemo\u003C\u002Fcode\u003E项目下来，这里主要介绍下我用到的插件文档\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.nuxtjs.cn\u002F\"\u003E\u003Ccode\u003EnuxtJs\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F\"\u003E\u003Ccode\u003Efrontmatter-markdown-loader\u003C\u002Fcode\u003E\u003C\u002Fa\u003E用来编译\u003Ccode\u003Emd\u003C\u002Fcode\u003E的\u003Ccode\u003Eloader\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgithub-markdown-css\"\u003E\u003Ccode\u003Egithub-markdown-css\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 美化编译后的\u003Ccode\u003Emd\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fprismjs\"\u003E\u003Ccode\u003Eprismjs\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 用来高亮\u003Ccode\u003Emd\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgh-pages\"\u003E\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 用来发布打包文件到\u003Ccode\u003Egithub\u003C\u002Fcode\u003E的\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E分支\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Ch3\u003E部署踩坑\u003C\u002Fh3\u003E\n\u003C\u002Fblockquote\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E一直推不上\u003Ccode\u003Egithub\u003C\u002Fcode\u003E，等了好久以后报错问题！\u003C\u002Fli\u003E\n\u003Cli\u003E代码推到\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E 分支后，为什么不能预览，资源\u003Ccode\u003E404\u003C\u002Fcode\u003E！\u003C\u002Fli\u003E\n\u003Cli\u003E使用\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E推送分支时，老是报错！\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch4\u003E\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E一直推不上\u003Ccode\u003Egithub\u003C\u002Fcode\u003E，等了好久以后报错问题！\u003C\u002Fh4\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E这个问题真的快把我弄死，疯狂查阅资料，各种试，最后终于找出了问题！\u003Cbr\u003E\n大家用\u003Ccode\u003Egithub\u003C\u002Fcode\u003E的时候真的不要用\u003Ccode\u003Ehhtps\u003C\u002Fcode\u003E的方式，一定要用\u003Ccode\u003Essh\u003C\u002Fcode\u003E的方式！重要事情说三遍：\u003Cstrong\u003E\u003Ccode\u003Essh\u003C\u002Fcode\u003E的方式\u003C\u002Fstrong\u003E，\u003Cstrong\u003E\u003Ccode\u003Essh\u003C\u002Fcode\u003E的方式\u003C\u002Fstrong\u003E，\u003Cstrong\u003E\u003Ccode\u003Essh\u003C\u002Fcode\u003E的方式\u003C\u002Fstrong\u003E！\u003Cbr\u003E\n具体的配置在\u003Ccode\u003Edeploy.js\u003C\u002Fcode\u003E里，大家可以参考\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cem\u003E另外用\u003Ccode\u003Esouretree\u003C\u002Fcode\u003E的同学，记得连接\u003Ccode\u003Egithub\u003C\u002Fcode\u003E的方式也用\u003Ccode\u003Essh\u003C\u002Fcode\u003E的，这样就不会存在拉不下来，或者推不上去的问题\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch4\u003E代码推到\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E 分支后，为什么不能预览，资源\u003Ccode\u003E404\u003C\u002Fcode\u003E！\u003C\u002Fh4\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E首先，我们使用\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E提交代码到\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E分支时，我们会看到，里面的文件都有，但是就是没有\u003Ccode\u003E.nojekyll\u003C\u002Fcode\u003E，\u003Cstrong\u003E没有\u003Ccode\u003E.nojekyll\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E 是最根本的原因，默认\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E是不会把点文件推上去的\n因为如果\u003Ccode\u003Egithub\u003C\u002Fcode\u003E上没有这个文件，是会忽略掉其他\u003Ccode\u003E_\u003C\u002Fcode\u003E开头的文件的，因此即使\u003Ccode\u003Egithub\u003C\u002Fcode\u003E上有\u003Ccode\u003E_nuxt\u003C\u002Fcode\u003E文件，一样会找不到资源，因为它会被略了，具体可以参考\u003Ca href=\"https:\u002F\u002Fwww.cnblogs.com\u002Fbabywhale\u002Fp\u002F13560573.html\"\u003E这篇文章\u003C\u002Fa\u003E\u003Cbr\u003E\n所以我们需要在\u003Ccode\u003Edeploy.js\u003C\u002Fcode\u003E文件里改一下配置：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Eghpages.publish('.\u002Fdist', {\n    branch: 'gh-pages',\n    repo: '你的仓库ssh地址',\n    dotfiles: true,  \u002F\u002F 很重要！！\n    message: 'deploy'\n}, err =&gt; {});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E重点是把\u003Ccode\u003Edotfiles: true\u003C\u002Fcode\u003E，这样\u003Ccode\u003E.nojekyll\u003C\u002Fcode\u003E才能推上去\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch4\u003E使用\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E推送分支时，老是报错！\u003C\u002Fh4\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E有时我们可能使用\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E推送分支，或者把远程\u003Ccode\u003Egh-pages\u003C\u002Fcode\u003E删除在推送，或者做了什么乱七八糟的操作以后，发现经常报错，类似：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E{&quot;code&quot;:128,&quot;message&quot;:&quot;fatal: couldn't find remote ref refs\u002Fheads\u002Fgh-pages\\n&quot;,&quot;name&quot;:&quot;ProcessError&quot;}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E就会十分的崩溃\u003Cbr\u003E\n在查阅了很多资料以后发现还是有解决方案的：\n在项目下的终端运行：\u003Ccode\u003Enode node_modules\u002Fgh-pages\u002Fbin\u002Fgh-pages-clean\u003C\u002Fcode\u003E；然后再推送，你会发现问题迎刃而解！可以参考\u003Ca href=\"https:\u002F\u002Fwww.bountysource.com\u002Fteams\u002Fgh-pages\u002Fissues\"\u003E这篇文章\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n"}}],fetch:{},mutations:void 0});