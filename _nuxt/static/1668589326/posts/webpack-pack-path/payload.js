__NUXT_JSONP__("/posts/webpack-pack-path", {data:[{posts:{attributes:{title:"Webpack 打包时，如何保留img文件夹里原有的文件夹",des:"保留img文件夹里面原始文件，更好管理",createTime:"2021-6-21"},html:"\u003Ch2\u003E场景\u003C\u002Fh2\u003E\n\u003Cp\u003E有时我们在开发模式时，会在\u003Ccode\u003Eimg\u003C\u002Fcode\u003E文件里建很多的不同的文件夹，方便我们开发过程中更好的管理，就像这样：\u003Cbr\u003E\n\u003Cimg src=\"..\u002Fmd\u002Fwebpack-pack-path\u002Fpic_1.png\" alt=\"\"\u003E\n我们把一些场景的资源用不同的文件存放，这样在我们开发的过程中，可以更快更有效地管理我们场景的资源，尤其是在做游戏项目。\u003Cbr\u003E\n当我们项目开发完了，打包时，\u003Ccode\u003Ewebpack\u003C\u002Fcode\u003E内部会将我们应用的图片资源，全部打包到一文件夹中，就像下面这样：\n\u003Cimg src=\"..\u002Fmd\u002Fwebpack-pack-path\u002Fpic_2.png\" alt=\"\"\u003E\n但是如果遇到项目上线了，只是紧急替换图片，不需要改逻辑，又或者有些奇葩客户，说打包出来图片文件不要混在一起，要分开，这样方便他们自己修改别的版本（我就遇到过），这就很尴尬了，光是找替换的文件都要找半天，所以这时如果我们在打包的时候，保留了原本\u003Ccode\u003Eimg\u003C\u002Fcode\u003E里面的文件夹，那就很舒服\u003C\u002Fp\u003E\n\u003Ch2\u003E实现\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003Ewebpack\u003C\u002Fcode\u003E🐂🍺的地方不需要再说啦，现在说下怎么实现在打包的时候，保留\u003Ccode\u003Eimg\u003C\u002Fcode\u003E文件夹里面的文件夹，其实也不是很难\u003Cbr\u003E\n\u003Ccode\u003Ewebpack\u003C\u002Fcode\u003E配置：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E\u002F\u002F webpack.config.js\n{\n    test: \u002F\\.(png|jpg|jpeg|gif)$\u002F,\n    use: [\n        {\n            loader: 'url-loader',\n            options: {\n                \u002F\u002F利用[path]路径获取文件夹名称并设置文件名\n                name: '[path]\u002F[name].[ext]',\n                limit: 1, \n                \u002F\u002F过滤掉[path]的相对路径\n                context: path.resolve(__dirname, '..\u002Fdev\u002Fassets'),\n            }\n        }\n    ]\n},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E我的开发目录结构：\n\u003Cimg src=\"..\u002Fmd\u002Fwebpack-pack-path\u002Fpic_3.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E打包以后的目录：\n\u003Cimg src=\"..\u002Fmd\u002Fwebpack-pack-path\u002Fpic_4.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E这样做可以过滤掉开发目录前面的路径：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Econtext: path.resolve(__dirname, '..\u002Fdev\u002Fassets')\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E如果为了防止缓存，还可以在打包出来的图片文件加上\u003Ccode\u003Ehash\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Ename: '[path]\u002F[name]-[hash:8].[ext]',\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"}}],fetch:{},mutations:[]});