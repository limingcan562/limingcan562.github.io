__NUXT_JSONP__("/posts/let-miniprogram-use-less", {data:[{posts:{attributes:{title:"如何让原生小程序支持less语法（最新教程）",des:"网上文章太老了，必须拒绝繁琐的wxss，用更爽快的less",createTime:"2022-9-13"},html:"\u003Ch2\u003E前言\u003C\u002Fh2\u003E\n\u003Cp\u003E大家写小程序的时候，估计\u003Cstrong\u003E最不爽\u003C\u002Fstrong\u003E的就是写\u003Ccode\u003Ewxss\u003C\u002Fcode\u003E样式了吧。维护差，可读性差，如果\u003Ccode\u003EDom\u003C\u002Fcode\u003E嵌套的多的话，估计写下去得疯。于是上网搜了一下怎么让原生小程序支持\u003Ccode\u003Eless\u003C\u002Fcode\u003E写法，但是发现很多文章都很老了，微信自己的\u003Ccode\u003EIDE\u003C\u002Fcode\u003E已经更新了\u003Ccode\u003En\u003C\u002Fcode\u003E个版本了，文章的步骤里面已经跟\u003Ccode\u003EIDE\u003C\u002Fcode\u003E里的不一样。于是自己摸索总结了一下，本文算是\u003Ccode\u003E让原生小程序支持less语法\u003C\u002Fcode\u003E的最新版本教程了。\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Ch4\u003E补充：本文使用的是\u003Ccode\u003EIDE\u003C\u002Fcode\u003E是：原生小程序自带的\u003Ccode\u003EIDE\u003C\u002Fcode\u003E，\u003Ccode\u003Evscode\u003C\u002Fcode\u003E\u003C\u002Fh4\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2\u003E下载\u003Ccode\u003EEasy LESS\u003C\u002Fcode\u003E插件\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E在\u003Ccode\u003Evscode\u003C\u002Fcode\u003E市场里面下载\u003Ccode\u003Eless\u003C\u002Fcode\u003E编译插件——\u003Ccode\u003EEasy LESS\u003C\u002Fcode\u003E。安装的时候建议不要选择同步，不然的话，这个插件会同步到你别的电脑里的\u003Ccode\u003Evscode\u003C\u002Fcode\u003E。因为现在我们工程基本都用\u003Ccode\u003Ewebpack\u003C\u002Fcode\u003E等构建工具，可以直接编译\u003Ccode\u003Eless\u003C\u002Fcode\u003E啥的，所以这个插件同步了没什么意义，下载它只是为了给原生小程序用。\u003C\u002Fp\u003E\n\u003Cp\u003E图示：\u003Cbr\u003E\n\u003Cimg src=\"..\u002Fmd\u002Flet-miniprogram-use-less\u002Fstep_1.png\" width=\"400px\" \u002F\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E比较懒的同学，也可以直接在\u003Ca href=\"https:\u002F\u002Fpan.baidu.com\u002Fs\u002F1s4wnhUxHeuPV_dAiNWnfYA?pwd=7777m\"\u003E百度云\u003C\u002Fa\u003E下，提取码: \u003Ccode\u003E7777\u003C\u002Fcode\u003E。这样的话，没有用\u003Ccode\u003Evscode\u003C\u002Fcode\u003E的同学，也可以直接下载插件安装。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2\u003E开始配置（这里跟网上的教程不一样了）\u003C\u002Fh2\u003E\n\u003Cp\u003E1.安装插件\u003C\u002Fp\u003E\n\u003Cp\u003E图示：\u003Cbr\u003E\n\u003Cimg src=\"..\u002Fmd\u002Flet-miniprogram-use-less\u002Fstep_2.png\" width=\"400px\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ch4\u003E选择“导入已安装的\u003Ccode\u003Evscode\u003C\u002Fcode\u003E扩展”方式（不建议）\u003C\u002Fh4\u003E\n这个方式不太建议。因为这种方式，会将你\u003Ccode\u003Evscode\u003C\u002Fcode\u003E里面\u003Cstrong\u003E安装过的\u003C\u002Fstrong\u003E插件，都装到原生小程序\u003Ccode\u003EIDE\u003C\u002Fcode\u003E里面。但是有很多插件，实际上在原生小程序\u003Ccode\u003EIDE\u003C\u002Fcode\u003E里是用不到也用不了的，比如：\u003Ccode\u003ELive Server\u003C\u002Fcode\u003E、\u003Ccode\u003EVetur\u003C\u002Fcode\u003E、\u003Ccode\u003Eopen in browser\u003C\u002Fcode\u003E等。个人喜欢\u003Ccode\u003EIDE\u003C\u002Fcode\u003E里能不装的东西，绝对不装。\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ch4\u003E选择“从已解包的扩展文件夹安装”方式（建议）\u003C\u002Fh4\u003E\n这个方式强烈建议。算是一种按需载入，需要什么就加什么，很符合“编程思想”。\u003Cbr\u003E\n如果是在\u003Ccode\u003Evscode\u003C\u002Fcode\u003E上面下载的，则找到\u003Ccode\u003Evscode\u003C\u002Fcode\u003E里面插件的路径：\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Ewindows\u003C\u002Fcode\u003E路径：\u003Ccode\u003EC:\\Users\\Administrator\\.vscode\\extensions\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003EMac\u003C\u002Fcode\u003E路径：\u003Ccode\u003EUser\u002F（你的用户名）\u002F.vscode\u002Fextensions\u003C\u002Fcode\u003E（打开\u003Ccode\u003EFinder\u003C\u002Fcode\u003E，转到\u003Ccode\u003EMacintosh HD\u003C\u002Fcode\u003E文件夹（从左栏中的设备访问），按住\u003Ccode\u003ECmd + Shift + . \u003C\u002Fcode\u003E所有隐藏文件都将变为可见）\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E2.配置插件相关的配置信息\u003Cbr\u003E\n\u003Ccode\u003Ectr + p\u003C\u002Fcode\u003E，输入\u003Ccode\u003E&gt;setting.json\u003C\u002Fcode\u003E，选择打开\u003Ccode\u003E首选项：打开设置（json）\u003C\u002Fcode\u003E，拉到最下面，加入配置：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E&quot;less.compile&quot;: {\n    &quot;outExt&quot;: &quot;.wxss&quot;\n},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E如果成功配置的话，上面那几行代码是会高亮的，如果没有高亮，说明没有配置成功\u003C\u002Fp\u003E\n\u003Ch2\u003E验证\u003C\u002Fh2\u003E\n\u003Cp\u003E上面的步骤都完成了以后，重启一下\u003Ccode\u003EIDE\u003C\u002Fcode\u003E，输入新建一个\u003Ccode\u003Eless\u003C\u002Fcode\u003E文件测试一下，如果\u003Ccode\u003Ectr + s\u003C\u002Fcode\u003E可以输出一个\u003Ccode\u003E.wxss\u003C\u002Fcode\u003E的文件，则说明所有配置成功了，以下为成功示例：\u003C\u002Fp\u003E\n  \u003Cimg src=\"..\u002Fmd\u002Flet-miniprogram-use-less\u002Fstep_3.png\" width=\"400px\" \u002F\u003E  \n\u003Cp\u003E\u003Ccode\u003EPS\u003C\u002Fcode\u003E：在所有步骤完成后，有时可能会出现\u003Ccode\u003Ectr + s\u003C\u002Fcode\u003E 不能输出\u003Ccode\u003E.wxss\u003C\u002Fcode\u003E文件的情况，这时可以更新小程序自带的\u003Ccode\u003EIDE\u003C\u002Fcode\u003E试试。\u003C\u002Fp\u003E\n\u003Ch2\u003E完美\u003Ccode\u003EEnding\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E其实完成以上步骤，基本就可以了。但是为了更完美一点，我们还需要再加多一个忽略上传文件的配置。\u003Cbr\u003E\n发布体验小程序的时候，大家都知道包是有大小限制的，所以当我们的页面越多，\u003Ccode\u003E.less\u003C\u002Fcode\u003E文件也会越多，这多多少少会增加我们进入小程序时耗得时间。所以我们在发布预览小程序的时候，要忽略掉\u003Ccode\u003E.less\u003C\u002Fcode\u003E文件的上传（测试好像实际不会上传\u003Ccode\u003E.less\u003C\u002Fcode\u003E，但为了保险起见，还是加上忽略配置）。打开根目录的\u003Ccode\u003Eproject.config.json\u003C\u002Fcode\u003E文件，加入以下配置：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E&quot;packOptions&quot;: {\n    &quot;ignore&quot;: [\n    {\n        &quot;value&quot;: &quot;.less&quot;,\n        &quot;type&quot;: &quot;suffix&quot;\n    },\n},\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E关于\u003Ccode\u003Eproject.config.json\u003C\u002Fcode\u003E文件相关介绍，大家可以去\u003Ca href=\"https:\u002F\u002Fdevelopers.weixin.qq.com\u002Fminiprogram\u002Fdev\u002Fdevtools\u002Fprojectconfig.html#%E4%B8%80%E7%BA%A7%E5%AD%97%E6%AE%B5\"\u003E官方文档\u003C\u002Fa\u003E详细看看\u003C\u002Fp\u003E\n"}}],fetch:{},mutations:[]});